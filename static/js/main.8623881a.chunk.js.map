{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isStarted","isReversed","sortType","NONE","startWork","setState","reverse","sortByAlpabet","ALPHABET","sortByLength","LENGTH","reset","this","listRender","goods","visibleGoods","sort","good1","good2","localeCompare","length","getReorderedGoods","className","type","cn","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,yFAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAyCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,WAAW,EACXC,YAAY,EACZC,SAAUN,EAASO,MAJvB,EAOEC,UAAY,kBAAM,EAAKC,SAAS,CAC9BL,WAAW,KARf,EAWEM,QAAU,WACR,EAAKD,UAAS,SAAAN,GAAK,MAAK,CACtBE,YAAaF,EAAME,gBAbzB,EAiBEM,cAAgB,WACd,EAAKF,SAAS,CAAEH,SAAUN,EAASY,YAlBvC,EAqBEC,aAAe,WACb,EAAKJ,SAAS,CAAEH,SAAUN,EAASc,UAtBvC,EAyBEC,MAAQ,WACN,EAAKN,SAAS,CAAEH,SAAUN,EAASO,KAAMF,YAAY,KA1BzD,4CA6BE,WACE,MAA4CW,KAAKb,MAAzCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAAYC,EAA/B,EAA+BA,SACzBW,EAjEV,SACEC,EACAZ,EACAD,GAGA,IAAMc,EAAY,YAAOD,GAczB,OAZIZ,IAAaN,EAASY,UACxBO,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAOD,EAAME,cAAcD,MAI3BhB,IAAaN,EAASc,QACxBK,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAOD,EAAMG,OAASF,EAAME,UAI5BnB,EACKc,EAAaT,UAGfS,EAyCcM,CAAkBxB,EAAiBK,EAAUD,GAEhE,OACE,qBAAKqB,UAAU,MAAf,SACItB,EAWE,sBAAKsB,UAAU,wCAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SAELD,UAAWE,IACT,aACA,CAAE,aAActB,IAAaN,EAASY,WAExCiB,QAASb,KAAKL,cAPhB,iCAYA,wBACEgB,KAAK,SACLD,UAAWE,IACT,aACA,CAAE,aAActB,IAAaN,EAASc,SAExCe,QAASb,KAAKH,aANhB,4BAWA,wBACEc,KAAK,SACLE,QAASb,KAAKN,QACdgB,UAAWE,IACT,cACA,CAAE,cAA6B,IAAfvB,IALpB,qBAWA,wBACEsB,KAAK,SACLE,QAASb,KAAKD,MACdW,UAAWE,IACT,qBACA,CACE,aAActB,IAAaN,EAASO,OACpB,IAAfF,IAPP,sBAeF,oBAAIqB,UAAU,aAAd,SACGT,EAAWa,KAAI,SAAAC,GACd,OACE,oBACEL,UAAU,mBADZ,SAIGK,GAFIA,WAjEf,wBACEJ,KAAK,SACLD,UAAU,4CACVG,QAASb,KAAKR,UAHhB,yBArCZ,GAAyBwB,aCxDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8623881a.chunk.js","sourcesContent":["import { Component } from 'react';\nimport cn from 'classnames';\n\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\n// Use this function in the render method\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  // Not to mutate the original array\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort((good1, good2) => {\n      return good1.localeCompare(good2);\n    });\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((good1, good2) => {\n      return good1.length - good2.length;\n    });\n  }\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isStarted: false,\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  startWork = () => this.setState({\n    isStarted: true,\n  });\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByAlpabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reset = () => {\n    this.setState({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  render() {\n    const { isStarted, isReversed, sortType } = this.state;\n    const listRender = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n    return (\n      <div className=\"App\">\n        {!isStarted\n          ? (\n            <button\n              type=\"button\"\n              className=\"button is-link is-outlined is-large start\"\n              onClick={this.startWork}\n            >\n              Start\n            </button>\n          )\n          : (\n            <div className=\"box has-background-link-light contant\">\n              <div className=\"buttons\">\n                <button\n                  type=\"button\"\n                  // className={`button is-link btn ${sortType === SortType.ALPHABET ? 'is-active' : ''}`}\n                  className={cn(\n                    'button btn',\n                    { 'is-warning': sortType === SortType.ALPHABET },\n                  )}\n                  onClick={this.sortByAlpabet}\n                >\n                  Sort alphabetically\n                </button>\n\n                <button\n                  type=\"button\"\n                  className={cn(\n                    'button btn',\n                    { 'is-warning': sortType === SortType.LENGTH },\n                  )}\n                  onClick={this.sortByLength}\n                >\n                  Sort by length\n                </button>\n\n                <button\n                  type=\"button\"\n                  onClick={this.reverse}\n                  className={cn(\n                    'button  btn',\n                    { 'is-warning': isReversed === true },\n                  )}\n                >\n                  Reverse\n                </button>\n\n                <button\n                  type=\"button\"\n                  onClick={this.reset}\n                  className={cn(\n                    'button is-info btn',\n                    {\n                      'is-warning': sortType === SortType.NONE\n                    && isReversed === false,\n                    },\n                  )}\n                >\n                  Reset\n                </button>\n              </div>\n\n              <ul className=\"listRender\">\n                {listRender.map(good => {\n                  return (\n                    <li\n                      className=\"listRender__item\"\n                      key={good}\n                    >\n                      {good}\n                    </li>\n                  );\n                })}\n              </ul>\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}